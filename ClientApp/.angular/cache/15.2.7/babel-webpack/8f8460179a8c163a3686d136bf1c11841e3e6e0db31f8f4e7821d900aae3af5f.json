{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services\";\nimport * as i2 from \"@angular/common\";\nfunction AlloyCalcComponent_tr_10_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"input\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", item_r2.id);\n  }\n}\nfunction AlloyCalcComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AlloyCalcComponent_tr_10_td_3_Template, 2, 1, \"td\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.id !== undefined);\n  }\n}\nfunction AlloyCalcComponent_tr_13_td_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"div\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const name_r7 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(name_r7.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", name_r7.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.partsSum[name_r7.id]);\n  }\n}\nfunction AlloyCalcComponent_tr_13_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, AlloyCalcComponent_tr_13_td_1_div_1_Template, 6, 3, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", name_r7.id !== undefined);\n  }\n}\nfunction AlloyCalcComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, AlloyCalcComponent_tr_13_td_1_Template, 2, 1, \"td\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.materialsNames.slice(i_r5 * 5, (i_r5 + 1) * 5));\n  }\n}\nconst _c0 = function () {\n  return [0, 1, 2, 3, 4, 5, 6];\n};\nexport class AlloyCalcComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.materialsNames = [];\n    this.items = [];\n    this.partsSum = new Array(34).fill(0);\n  }\n  ngOnInit() {\n    this.dataService.getAlloyItemsGet$Json().subscribe(x => {\n      console.log(x);\n      this.items = x;\n    });\n    this.dataService.getMaterialsNamesGet$Json().subscribe(x => {\n      console.log(x);\n      this.materialsNames = x;\n    });\n  }\n  calcParts() {\n    for (let i = 0; i < this.partsSum.length; i++) {\n      this.partsSum[i] = 0;\n    }\n    let element = [];\n    for (let i = this.items[0].id; i < this.items[this.items.length - 1].id + 1; i++) {\n      element.push(document.getElementById(i.toString()));\n    }\n    for (let i = this.items[0].id; i < this.items[this.items.length - 1].id + 1; i++) {\n      if (Number(element.filter(x => Number(x.id) === i)[0]?.value ?? 0) !== 0) for (let j = 0; j < this.partsSum.length; j++) {\n        let matAmount = this.items.filter(x => x.id === i)[0].compositions.filter(x => x.material === j)[0]?.amount || 0;\n        let times = Number(element.filter(x => Number(x.id) === i)[0]?.value ?? 0);\n        this.partsSum[j] += Math.ceil(matAmount * times / 1728);\n      }\n    }\n  }\n}\nAlloyCalcComponent.ɵfac = function AlloyCalcComponent_Factory(t) {\n  return new (t || AlloyCalcComponent)(i0.ɵɵdirectiveInject(i1.MainService));\n};\nAlloyCalcComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AlloyCalcComponent,\n  selectors: [[\"app-alloy-calc\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"col\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"table\", \"table-striped-columns\"], [4, \"ngIf\"], [\"type\", \"number\", 3, \"id\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"col-7\"], [1, \"col-5\", 3, \"id\"], [2, \"width\", \"1px\"]],\n  template: function AlloyCalcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"table\", 2)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Count\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"tbody\");\n      i0.ɵɵtemplate(10, AlloyCalcComponent_tr_10_Template, 4, 2, \"tr\", 3);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(11, \"table\", 4)(12, \"tbody\");\n      i0.ɵɵtemplate(13, AlloyCalcComponent_tr_13_Template, 2, 1, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AlloyCalcComponent","constructor","dataService","Array","fill","ngOnInit","getAlloyItemsGet$Json","subscribe","x","console","log","items","getMaterialsNamesGet$Json","materialsNames","calcParts","i","partsSum","length","element","id","push","document","getElementById","toString","Number","filter","value","j","matAmount","compositions","material","amount","times","Math","ceil","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Projects\\Project1\\ClientApp\\src\\app\\alloy-calc\\alloy-calc.component.html","E:\\Projects\\Project1\\ClientApp\\src\\app\\alloy-calc\\alloy-calc.component.ts"],"sourcesContent":["<div class=\"row\">\r\n  <div class=\"col\">\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>Item</th>\r\n          <th>Count</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let item of items\">\r\n          <td>{{item.name}}</td>\r\n          <td *ngIf=\"item.id !== undefined\">\r\n            <input id=\"{{item.id}}\" type=\"number\" >\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n<table class=\"table table-striped-columns\">\r\n  <tbody>\r\n    <tr *ngFor=\"let i of [0,1,2,3,4,5,6]\">\r\n      <td *ngFor=\"let name of materialsNames.slice(i*5,(i+1)*5)\">\r\n        <div class=\"row\" *ngIf=\"name.id !== undefined\">\r\n          <div class=\"col-7\">{{name.name}}</div>\r\n          <div class=\"col-5\" id=\"{{name.id}}\"><div style=\"width:1px\">{{partsSum[name.id]}}</div></div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ItemOutputDto, MaterialsNamesDto } from '../api/models';\r\nimport { MainService } from '../api/services';\r\n\n@Component({\n  selector: 'app-alloy-calc',\n  templateUrl: './alloy-calc.component.html',\n  styleUrls: ['./alloy-calc.component.css']\n})\nexport class AlloyCalcComponent implements OnInit {\r\n  materialsNames: MaterialsNamesDto[] = []\r\n  items: ItemOutputDto[]=[]\r\n  partsSum: Array<number> = new Array<number>(34).fill(0)\r\n  constructor (private dataService: MainService)\r\n  {\r\n\r\n  }\r\n  ngOnInit(): void\r\n  {\r\n    this.dataService.getAlloyItemsGet$Json().subscribe(x => {\r\n      console.log(x);\r\n      this.items = x;\r\n    });\r\n    this.dataService.getMaterialsNamesGet$Json().subscribe(x => {\r\n      console.log(x);\r\n      this.materialsNames = x;\r\n    });\r\n  }\n  calcParts() {\r\n    for (let i = 0; i < this.partsSum.length; i++) {\r\n      this.partsSum[i] = 0;\r\n    }\r\n    let element: HTMLInputElement[] = []\r\n    for (let i = this.items[0].id; i < this.items[this.items.length - 1].id + 1; i++) {\r\n      element.push(document.getElementById(i.toString()) as HTMLInputElement);\r\n    }\r\n    for (let i = this.items[0].id; i < this.items[this.items.length - 1].id + 1; i++) {\r\n      if (Number(element.filter(x => Number(x.id) === i)[0]?.value ?? 0) !== 0)\r\n        for (let j = 0; j < this.partsSum.length; j++) {\r\n          let matAmount: number = this.items.filter((x) => x.id === i)[0].compositions.filter(x => x.material === j)[0]?.amount || 0\r\n          let times: number = Number(element.filter(x => Number(x.id) === i)[0]?.value ?? 0)\r\n          this.partsSum[j] += Math.ceil((matAmount * times) / 1728)\r\n        }\r\n    }\r\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}