{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { BaseService } from '../base-service';\nimport { getAlloyItemsGet$Json } from '../fn/main/get-alloy-items-get-json';\nimport { getAlloyItemsGet$Plain } from '../fn/main/get-alloy-items-get-plain';\nimport { getCapitalItemsGet$Json } from '../fn/main/get-capital-items-get-json';\nimport { getCapitalItemsGet$Plain } from '../fn/main/get-capital-items-get-plain';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-configuration\";\nimport * as i2 from \"@angular/common/http\";\nexport class MainService extends BaseService {\n  constructor(config, http) {\n    super(config, http);\n  }\n  /** Path part for operation `getCapitalItemsGet()` */\n\n  /**\r\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\r\n   * To access only the response body, use `getCapitalItemsGet$Plain()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\n  getCapitalItemsGet$Plain$Response(params, context) {\n    return getCapitalItemsGet$Plain(this.http, this.rootUrl, params, context);\n  }\n  /**\r\n   * This method provides access only to the response body.\r\n   * To access the full response (for headers, for example), `getCapitalItemsGet$Plain$Response()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\n  getCapitalItemsGet$Plain(params, context) {\n    return this.getCapitalItemsGet$Plain$Response(params, context).pipe(map(r => r.body));\n  }\n  /**\r\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\r\n   * To access only the response body, use `getCapitalItemsGet$Json()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\n  getCapitalItemsGet$Json$Response(params, context) {\n    return getCapitalItemsGet$Json(this.http, this.rootUrl, params, context);\n  }\n  /**\r\n   * This method provides access only to the response body.\r\n   * To access the full response (for headers, for example), `getCapitalItemsGet$Json$Response()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\n  getCapitalItemsGet$Json(params, context) {\n    return this.getCapitalItemsGet$Json$Response(params, context).pipe(map(r => r.body));\n  }\n  /** Path part for operation `getAlloyItemsGet()` */\n\n  /**\r\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\r\n   * To access only the response body, use `getAlloyItemsGet$Plain()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\n  getAlloyItemsGet$Plain$Response(params, context) {\n    return getAlloyItemsGet$Plain(this.http, this.rootUrl, params, context);\n  }\n  /**\r\n   * This method provides access only to the response body.\r\n   * To access the full response (for headers, for example), `getAlloyItemsGet$Plain$Response()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\n  getAlloyItemsGet$Plain(params, context) {\n    return this.getAlloyItemsGet$Plain$Response(params, context).pipe(map(r => r.body));\n  }\n  /**\r\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\r\n   * To access only the response body, use `getAlloyItemsGet$Json()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\n  getAlloyItemsGet$Json$Response(params, context) {\n    return getAlloyItemsGet$Json(this.http, this.rootUrl, params, context);\n  }\n  /**\r\n   * This method provides access only to the response body.\r\n   * To access the full response (for headers, for example), `getAlloyItemsGet$Json$Response()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\n  getAlloyItemsGet$Json(params, context) {\n    return this.getAlloyItemsGet$Json$Response(params, context).pipe(map(r => r.body));\n  }\n}\nMainService.GetCapitalItemsGetPath = '/GetCapitalItems';\nMainService.GetAlloyItemsGetPath = '/GetAlloyItems';\nMainService.ɵfac = function MainService_Factory(t) {\n  return new (t || MainService)(i0.ɵɵinject(i1.ApiConfiguration), i0.ɵɵinject(i2.HttpClient));\n};\nMainService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MainService,\n  factory: MainService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,SAASC,WAAW,QAAQ,iBAAiB;AAI7C,SAASC,qBAAqB,QAAQ,qCAAqC;AAE3E,SAASC,sBAAsB,QAAQ,sCAAsC;AAE7E,SAASC,uBAAuB,QAAQ,uCAAuC;AAE/E,SAASC,wBAAwB,QAAQ,wCAAwC;;;;AAMjF,OAAM,MAAOC,WAAY,SAAQL,WAAW;EAC1CM,YAAYC,MAAwB,EAAEC,IAAgB;IACpD,KAAK,CAACD,MAAM,EAAEC,IAAI,CAAC;EACrB;EAEA;;EAGA;;;;;;EAMAC,iCAAiC,CAACC,MAAwC,EAAEC,OAAqB;IAC/F,OAAOP,wBAAwB,CAAC,IAAI,CAACI,IAAI,EAAE,IAAI,CAACI,OAAO,EAAEF,MAAM,EAAEC,OAAO,CAAC;EAC3E;EAEA;;;;;;EAMAP,wBAAwB,CAACM,MAAwC,EAAEC,OAAqB;IACtF,OAAO,IAAI,CAACF,iCAAiC,CAACC,MAAM,EAAEC,OAAO,CAAC,CAACE,IAAI,CACjEd,GAAG,CAAEe,CAA2C,IAA2BA,CAAC,CAACC,IAAI,CAAC,CACnF;EACH;EAEA;;;;;;EAMAC,gCAAgC,CAACN,MAAuC,EAAEC,OAAqB;IAC7F,OAAOR,uBAAuB,CAAC,IAAI,CAACK,IAAI,EAAE,IAAI,CAACI,OAAO,EAAEF,MAAM,EAAEC,OAAO,CAAC;EAC1E;EAEA;;;;;;EAMAR,uBAAuB,CAACO,MAAuC,EAAEC,OAAqB;IACpF,OAAO,IAAI,CAACK,gCAAgC,CAACN,MAAM,EAAEC,OAAO,CAAC,CAACE,IAAI,CAChEd,GAAG,CAAEe,CAA2C,IAA2BA,CAAC,CAACC,IAAI,CAAC,CACnF;EACH;EAEA;;EAGA;;;;;;EAMAE,+BAA+B,CAACP,MAAsC,EAAEC,OAAqB;IAC3F,OAAOT,sBAAsB,CAAC,IAAI,CAACM,IAAI,EAAE,IAAI,CAACI,OAAO,EAAEF,MAAM,EAAEC,OAAO,CAAC;EACzE;EAEA;;;;;;EAMAT,sBAAsB,CAACQ,MAAsC,EAAEC,OAAqB;IAClF,OAAO,IAAI,CAACM,+BAA+B,CAACP,MAAM,EAAEC,OAAO,CAAC,CAACE,IAAI,CAC/Dd,GAAG,CAAEe,CAAkC,IAAkBA,CAAC,CAACC,IAAI,CAAC,CACjE;EACH;EAEA;;;;;;EAMAG,8BAA8B,CAACR,MAAqC,EAAEC,OAAqB;IACzF,OAAOV,qBAAqB,CAAC,IAAI,CAACO,IAAI,EAAE,IAAI,CAACI,OAAO,EAAEF,MAAM,EAAEC,OAAO,CAAC;EACxE;EAEA;;;;;;EAMAV,qBAAqB,CAACS,MAAqC,EAAEC,OAAqB;IAChF,OAAO,IAAI,CAACO,8BAA8B,CAACR,MAAM,EAAEC,OAAO,CAAC,CAACE,IAAI,CAC9Dd,GAAG,CAAEe,CAAkC,IAAkBA,CAAC,CAACC,IAAI,CAAC,CACjE;EACH;;AAjGWV,WAAY,CAMPc,sBAAsB,GAAG,kBAAkB;AANhDd,WAAY,CAqDPe,oBAAoB,GAAG,gBAAgB;AArD5Cf,WAAY;mBAAZA,WAAW;AAAA;AAAXA,WAAY;SAAZA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YADE;AAAM","names":["map","BaseService","getAlloyItemsGet$Json","getAlloyItemsGet$Plain","getCapitalItemsGet$Json","getCapitalItemsGet$Plain","MainService","constructor","config","http","getCapitalItemsGet$Plain$Response","params","context","rootUrl","pipe","r","body","getCapitalItemsGet$Json$Response","getAlloyItemsGet$Plain$Response","getAlloyItemsGet$Json$Response","GetCapitalItemsGetPath","GetAlloyItemsGetPath","factory","providedIn"],"sourceRoot":"","sources":["E:\\Projects\\Project1\\ClientApp\\src\\app\\api\\services\\main.service.ts"],"sourcesContent":["/* tslint:disable */\r\n/* eslint-disable */\r\nimport { HttpClient, HttpContext } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { BaseService } from '../base-service';\r\nimport { ApiConfiguration } from '../api-configuration';\r\nimport { StrictHttpResponse } from '../strict-http-response';\r\n\r\nimport { getAlloyItemsGet$Json } from '../fn/main/get-alloy-items-get-json';\r\nimport { GetAlloyItemsGet$Json$Params } from '../fn/main/get-alloy-items-get-json';\r\nimport { getAlloyItemsGet$Plain } from '../fn/main/get-alloy-items-get-plain';\r\nimport { GetAlloyItemsGet$Plain$Params } from '../fn/main/get-alloy-items-get-plain';\r\nimport { getCapitalItemsGet$Json } from '../fn/main/get-capital-items-get-json';\r\nimport { GetCapitalItemsGet$Json$Params } from '../fn/main/get-capital-items-get-json';\r\nimport { getCapitalItemsGet$Plain } from '../fn/main/get-capital-items-get-plain';\r\nimport { GetCapitalItemsGet$Plain$Params } from '../fn/main/get-capital-items-get-plain';\r\nimport { Item } from '../models/item';\r\nimport { ItemOutputDto } from '../models/item-output-dto';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MainService extends BaseService {\r\n  constructor(config: ApiConfiguration, http: HttpClient) {\r\n    super(config, http);\r\n  }\r\n\r\n  /** Path part for operation `getCapitalItemsGet()` */\r\n  static readonly GetCapitalItemsGetPath = '/GetCapitalItems';\r\n\r\n  /**\r\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\r\n   * To access only the response body, use `getCapitalItemsGet$Plain()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\r\n  getCapitalItemsGet$Plain$Response(params?: GetCapitalItemsGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<ItemOutputDto>>> {\r\n    return getCapitalItemsGet$Plain(this.http, this.rootUrl, params, context);\r\n  }\r\n\r\n  /**\r\n   * This method provides access only to the response body.\r\n   * To access the full response (for headers, for example), `getCapitalItemsGet$Plain$Response()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\r\n  getCapitalItemsGet$Plain(params?: GetCapitalItemsGet$Plain$Params, context?: HttpContext): Observable<Array<ItemOutputDto>> {\r\n    return this.getCapitalItemsGet$Plain$Response(params, context).pipe(\r\n      map((r: StrictHttpResponse<Array<ItemOutputDto>>): Array<ItemOutputDto> => r.body)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\r\n   * To access only the response body, use `getCapitalItemsGet$Json()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\r\n  getCapitalItemsGet$Json$Response(params?: GetCapitalItemsGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<ItemOutputDto>>> {\r\n    return getCapitalItemsGet$Json(this.http, this.rootUrl, params, context);\r\n  }\r\n\r\n  /**\r\n   * This method provides access only to the response body.\r\n   * To access the full response (for headers, for example), `getCapitalItemsGet$Json$Response()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\r\n  getCapitalItemsGet$Json(params?: GetCapitalItemsGet$Json$Params, context?: HttpContext): Observable<Array<ItemOutputDto>> {\r\n    return this.getCapitalItemsGet$Json$Response(params, context).pipe(\r\n      map((r: StrictHttpResponse<Array<ItemOutputDto>>): Array<ItemOutputDto> => r.body)\r\n    );\r\n  }\r\n\r\n  /** Path part for operation `getAlloyItemsGet()` */\r\n  static readonly GetAlloyItemsGetPath = '/GetAlloyItems';\r\n\r\n  /**\r\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\r\n   * To access only the response body, use `getAlloyItemsGet$Plain()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\r\n  getAlloyItemsGet$Plain$Response(params?: GetAlloyItemsGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<Item>>> {\r\n    return getAlloyItemsGet$Plain(this.http, this.rootUrl, params, context);\r\n  }\r\n\r\n  /**\r\n   * This method provides access only to the response body.\r\n   * To access the full response (for headers, for example), `getAlloyItemsGet$Plain$Response()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\r\n  getAlloyItemsGet$Plain(params?: GetAlloyItemsGet$Plain$Params, context?: HttpContext): Observable<Array<Item>> {\r\n    return this.getAlloyItemsGet$Plain$Response(params, context).pipe(\r\n      map((r: StrictHttpResponse<Array<Item>>): Array<Item> => r.body)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\r\n   * To access only the response body, use `getAlloyItemsGet$Json()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\r\n  getAlloyItemsGet$Json$Response(params?: GetAlloyItemsGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<Item>>> {\r\n    return getAlloyItemsGet$Json(this.http, this.rootUrl, params, context);\r\n  }\r\n\r\n  /**\r\n   * This method provides access only to the response body.\r\n   * To access the full response (for headers, for example), `getAlloyItemsGet$Json$Response()` instead.\r\n   *\r\n   * This method doesn't expect any request body.\r\n   */\r\n  getAlloyItemsGet$Json(params?: GetAlloyItemsGet$Json$Params, context?: HttpContext): Observable<Array<Item>> {\r\n    return this.getAlloyItemsGet$Json$Response(params, context).pipe(\r\n      map((r: StrictHttpResponse<Array<Item>>): Array<Item> => r.body)\r\n    );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}