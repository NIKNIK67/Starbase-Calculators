// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebPage;

#nullable disable

namespace WebPage.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20231015090951_Base")]
    partial class Base
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebPage.Models.CompositionElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Key")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "material");

                    b.Property<int?>("RootItemId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "amount");

                    b.HasKey("Id");

                    b.HasIndex("RootItemId");

                    b.ToTable("CompositionElement");

                    b.HasAnnotation("Relational:JsonPropertyName", "compositions");
                });

            modelBuilder.Entity("WebPage.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("WebPage.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "imageUrl");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WebPage.Models.MaterialObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("MaterialNames");
                });

            modelBuilder.Entity("WebPage.Models.OreLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "locationType");

                    b.Property<int?>("RootLocationId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("RootLocationId");

                    b.ToTable("OreLocation");

                    b.HasAnnotation("Relational:JsonPropertyName", "oreLocations");
                });

            modelBuilder.Entity("WebPage.Models.OreLocationElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Material")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "material");

                    b.Property<int>("Rarity")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "rarity");

                    b.Property<int?>("RootOreLocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RootOreLocationId");

                    b.ToTable("OreLocationElement");

                    b.HasAnnotation("Relational:JsonPropertyName", "ores");
                });

            modelBuilder.Entity("WebPage.Models.ShipModuels.Battery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("ElecrticityStorage")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "elecrticityStorage");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("Batteries");
                });

            modelBuilder.Entity("WebPage.Models.ShipModuels.FuelChamber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("HeatDispiration")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatDispiration");

                    b.Property<float>("HeatProduction")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatProduction");

                    b.Property<float>("HeatStore")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatStore");

                    b.Property<float>("HeatTransferToHeatsink")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatTransferToHeatsink");

                    b.Property<float>("HeatTransferToRadiator")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatTransferToRadiator");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("FuelChambers");
                });

            modelBuilder.Entity("WebPage.Models.ShipModuels.Generator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("ElectricityProduction")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "electricityProduction");

                    b.Property<float>("HeatDispiration")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatDispiration");

                    b.Property<float>("HeatProduction")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatProduction");

                    b.Property<float>("HeatStore")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatStore");

                    b.Property<float>("HeatTransferToHeatsink")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatTransferToHeatsink");

                    b.Property<float>("HeatTransferToRadiator")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatTransferToRadiator");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("Generators");
                });

            modelBuilder.Entity("WebPage.Models.ShipModuels.PropelantTank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<float>("PropelantStore")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "propelantStore");

                    b.HasKey("Id");

                    b.ToTable("PropelantTanks");
                });

            modelBuilder.Entity("WebPage.Models.ShipModuels.Radiator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("HeatDispiration")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatDispiration");

                    b.Property<float>("HeatStore")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatStore");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("Radiators");
                });

            modelBuilder.Entity("WebPage.Models.ShipModuels.Thruster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("ElectricityConsume")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "electricityConsume");

                    b.Property<float>("ElectricityConsumePassive")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "electricityConsumePassive");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<float>("PropelantConsume")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "propelantConsume");

                    b.Property<float>("ThrustProduction")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "thrustProduction");

                    b.HasKey("Id");

                    b.ToTable("Thrusters");
                });

            modelBuilder.Entity("WebPage.Models.ShipModuels.Tool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("ElectricityConsume")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "electricityConsume");

                    b.Property<float>("ElectricityConsumePassive")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "electricityConsumePassive");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("Tools");
                });

            modelBuilder.Entity("WebPage.Models.ShipModuels.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("ElectricityConsume")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "electricityConsume");

                    b.Property<float>("ElectricityConsumePassive")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "electricityConsumePassive");

                    b.Property<float>("ElectricityConsumePerShot")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "electricityConsumePerShot");

                    b.Property<float>("HeatDispiration")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatDispiration");

                    b.Property<float>("HeatProduction")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatProduction");

                    b.Property<float>("HeatStore")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatStore");

                    b.Property<float>("HeatTransferToHeatsink")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatTransferToHeatsink");

                    b.Property<float>("HeatTransferToRadiator")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "heatTransferToRadiator");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("WebPage.Models.CompositionElement", b =>
                {
                    b.HasOne("WebPage.Models.Item", "RootItem")
                        .WithMany("Composition")
                        .HasForeignKey("RootItemId");

                    b.Navigation("RootItem");
                });

            modelBuilder.Entity("WebPage.Models.OreLocation", b =>
                {
                    b.HasOne("WebPage.Models.Location", "RootLocation")
                        .WithMany("OreLocations")
                        .HasForeignKey("RootLocationId");

                    b.Navigation("RootLocation");
                });

            modelBuilder.Entity("WebPage.Models.OreLocationElement", b =>
                {
                    b.HasOne("WebPage.Models.OreLocation", "RootOreLocation")
                        .WithMany("Ores")
                        .HasForeignKey("RootOreLocationId");

                    b.Navigation("RootOreLocation");
                });

            modelBuilder.Entity("WebPage.Models.Item", b =>
                {
                    b.Navigation("Composition");
                });

            modelBuilder.Entity("WebPage.Models.Location", b =>
                {
                    b.Navigation("OreLocations");
                });

            modelBuilder.Entity("WebPage.Models.OreLocation", b =>
                {
                    b.Navigation("Ores");
                });
#pragma warning restore 612, 618
        }
    }
}
